{"version":3,"sources":["logo.svg","redux/SearchReposByTitle/search-repos-by-title-types.js","redux/SearchReposByTitle/search-repos-by-title-action.js","Components/Header/HeaderComponent.jsx","redux/favourite-repos/favourite-repos-type.jsx","redux/favourite-repos/add-favourite-repos-action.js","redux/favourite-repos/remove-favourite-repos-action.js","redux/change-header-dropdown/change-header-dropdown-types.js","redux/change-header-dropdown/change-header-dropdown-action.js","redux/fetch-data-from-git/fetch-data-from-git-types.js","redux/fetch-data-from-git/fetch-data-from-git-action.js","redux/main-content-view/main-content-view-types.js","redux/main-content-view/enable-main-content-view-action.js","redux/main-content-view/disable-main-content-view-action.js","Components/Header/HeaderContainer.jsx","Components/Repository/RepositoryComponent.jsx","Components/Repository/RepositoryContainer.jsx","redux/main-content-view/main-content-view-reducer.js","Components/contributors/ContributorsComponent.jsx","Components/contributors/ContributorsContainer.jsx","Components/ListOfRepos/ListOfReposComponent.jsx","Components/ListOfRepos/ListOfReposContainer.jsx","App.js","reportWebVitals.js","redux/SearchReposByTitle/search-repos-by-title-reducer.js","redux/favourite-repos/favourite-repos-reducer.js","redux/change-header-dropdown/change-header-dropdown-reducer.js","redux/fetch-data-from-git/fetch-data-from-git-reducer.js","redux/reducers.js","redux/store.js","index.js"],"names":["SEARCH_REPO_BY_TITLE","searchReposByTitleAction","searchKey","type","payload","HeaderComponent","props","toggle","setState","isOpen","state","changeHeaderDropDown","event","target","className","searchRepoByTitle","value","headerDropdownValue","titleSearchKeyWord","bind","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","InputGroup","Input","placeholder","onChange","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","updatedDropDown","DropdownMenu","right","DropdownItem","NavbarText","Component","ADD_TO_FAVOURITE_REPOS","REMOVE_FROM_FAVOURITE_REPOS","addFavouriteRepos","repoDetails","console","log","removeFavouriteRepos","UPDATE_DROP_DOWN","dropDownSelected","GET_DATA_FROM_GIT","GET_DATA_FROM_GIT_ERROR","getDataFromGit","url","dispatch","axios","get","then","response","data","catch","err","ENABLE_MAIN_CONTENT","DISABLE_MAIN_CONTENT","enableMainContent","repoData","disableMainContent","connect","searchKeyEntered","searchReposByTitleReducer","updateDropDownReducer","bindActionCreators","RepositoryComponent","handleClick","name","addOrRemove","description","addedToFav","Col","md","Card","CardBody","CardTitle","CardText","ButtonGroup","Button","favouriteRepos","favouriteReposReducer","initialState","display","mainContentViewReducer","action","ContributorsComponent","dataOfARepo","Container","full_name","toUpperCase","CardImg","top","width","src","owner","avatar_url","alt","Row","CardHeader","default_branch","created_at","clone_url","watchers","forks","updated_at","ssh_url","license","ListOfReposComponent","repositoryData","dataToShow","dataProcessedToDisplay","fluid","ContributorsContainer","map","val","ind","RepositoryContainer","index","filter","toLowerCase","includes","dataFromGit","enteredKey","allOrFavs","App","HeaderContainer","ListOfReposContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","filterFavs","length","arrayData","initialData","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.97ce970a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const SEARCH_REPO_BY_TITLE = 'SEARCH_REPO_BY_TITLE';\r\n","import {SEARCH_REPO_BY_TITLE} from './search-repos-by-title-types';\r\n\r\nexport const searchReposByTitleAction = (searchKey) => {\r\n    return {\r\n        type: SEARCH_REPO_BY_TITLE,\r\n        payload: {\r\n            searchKey: searchKey\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    InputGroup,\r\n    Input\r\n} from 'reactstrap';\r\nimport connect from \"react-redux\";\r\nimport {searchReposByTitleAction} from \"../../redux/SearchReposByTitle/search-repos-by-title-action\";\r\nimport './HeaderComponent.css';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            headerDropdownValue: 'All',\r\n            titleSearchKeyWord: ''\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.changeHeaderDropDown = this.changeHeaderDropDown.bind(this);\r\n        this.searchRepoByTitle = this.searchRepoByTitle.bind(this);\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    changeHeaderDropDown = (event) => {\r\n        /*this.setState({\r\n            headerDropdownValue: event.target.className\r\n        })*/\r\n        this.props.changeHeaderDropDown(event.target.className);\r\n    }\r\n\r\n    searchRepoByTitle = (event) => {\r\n        this.props.searchReposByTitleAction(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <NavbarBrand href=\"/\">GitHub</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    className='searchBox'\r\n                                    placeholder='Search repos by title'\r\n                                    onChange={this.searchRepoByTitle}\r\n                                />\r\n                            </InputGroup>\r\n                            <UncontrolledDropdown nav inNavbar>\r\n                                <DropdownToggle nav caret>\r\n                                    {this.props.updatedDropDown}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem>\r\n                                        <div onClick={this.changeHeaderDropDown} className='All'>All</div>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <div onClick={this.changeHeaderDropDown} className='Favourites'>Favourites</div>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Nav>\r\n                        <NavbarText>Simple Text</NavbarText>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HeaderComponent;\r\n","export const ADD_TO_FAVOURITE_REPOS = 'ADD_TO_FAVOURITE_REPOS';\r\nexport const REMOVE_FROM_FAVOURITE_REPOS = 'REMOVE_FROM_FAVOURITE_REPOS';\r\n","import {ADD_TO_FAVOURITE_REPOS, REMOVE_FROM_FAVOURITE_REPOS} from \"./favourite-repos-type\";\r\n\r\nexport const addFavouriteRepos = (repoDetails) => {\r\n    console.log('called action');\r\n    return {\r\n        type: ADD_TO_FAVOURITE_REPOS,\r\n        payload: {\r\n            repoDetails\r\n        }\r\n    }\r\n}\r\n","import {REMOVE_FROM_FAVOURITE_REPOS} from \"./favourite-repos-type\";\r\n\r\nexport const removeFavouriteRepos = (repoDetails) => {\r\n    return {\r\n        type: REMOVE_FROM_FAVOURITE_REPOS,\r\n        payload: {\r\n            repoDetails\r\n        }\r\n    }\r\n}\r\n","export const UPDATE_DROP_DOWN = 'UPDATE_DROP_DOWN';\r\n","import {UPDATE_DROP_DOWN} from \"./change-header-dropdown-types\";\r\n\r\nexport const changeHeaderDropDown = (dropDownSelected) => {\r\n    return {\r\n        type: UPDATE_DROP_DOWN,\r\n        payload: {\r\n            dropDownSelected\r\n        }\r\n    }\r\n}\r\n","export const GET_DATA_FROM_GIT = 'GET_DATA_FROM_GIT';\r\nexport const GET_DATA_FROM_GIT_ERROR = 'GET_DATA_FROM_GIT_ERROR';\r\n","import {GET_DATA_FROM_GIT, GET_DATA_FROM_GIT_ERROR} from \"./fetch-data-from-git-types\";\r\nimport axios from 'axios';\r\nexport const getDataFromGit = (url) => {\r\n    return dispatch => {\r\n        axios.get('https://api.github.com/users/bradtraversy/repos')\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_DATA_FROM_GIT,\r\n                    payload: response.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: GET_DATA_FROM_GIT_ERROR,\r\n                    payload: err\r\n                })\r\n            })\r\n    }\r\n}\r\n","export const ENABLE_MAIN_CONTENT = 'ENABLE_MAIN_CONTENT';\r\nexport const DISABLE_MAIN_CONTENT = 'DISABLE_MAIN_CONTENT';\r\n","import {ENABLE_MAIN_CONTENT} from \"./main-content-view-types\";\r\n\r\nexport const enableMainContent = repoData => {\r\n    return {\r\n        type: ENABLE_MAIN_CONTENT,\r\n        payload: repoData\r\n    }\r\n}\r\n","import {DISABLE_MAIN_CONTENT} from \"./main-content-view-types\";\r\n\r\nexport const disableMainContent = () => {\r\n    return {\r\n        type: DISABLE_MAIN_CONTENT\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport HeaderComponent from \"./HeaderComponent\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changeHeaderDropDown,\r\n    searchReposByTitleAction\r\n} from '../../redux/actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchKeyEntered: state.searchReposByTitleReducer,\r\n        updatedDropDown: state.updateDropDownReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        changeHeaderDropDown,\r\n        searchReposByTitleAction\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\r\n","import React, {Component, Fragment} from 'react';\r\nimport {\r\n    Card,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    Button,\r\n    Col,\r\n    ButtonGroup\r\n} from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './RepositoryComponent.css';\r\n\r\nclass RepositoryComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        console.log('clicked: ', event.target.name);\r\n        let addOrRemove = event.target.name;\r\n        if (addOrRemove === 'add') {\r\n            this.props.addFavouriteRepos(this.props.repoData);\r\n        } else if (addOrRemove === 'remove') {\r\n            this.props.removeFavouriteRepos(this.props.repoData);\r\n        } else {\r\n            this.props.enableMainContent(this.props.repoData);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {name, description, addedToFav} = this.props.repoData;\r\n        // console.log('clicker: ', this.handleClick);\r\n        return(\r\n            <Col md={4}>\r\n                <Card className='cardBox'>\r\n                    {/*<CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />*/}\r\n                    <CardBody>\r\n                        <CardTitle>{name}</CardTitle>\r\n                        {/*<CardSubtitle>Card subtitle</CardSubtitle>*/}\r\n                        <CardText>{description? description : 'No description available for this repo.'}</CardText>\r\n                        <ButtonGroup>\r\n                            <Button\r\n                                color='primary'\r\n                                onClick={this.handleClick}\r\n                            >\r\n                                Open\r\n                            </Button>\r\n                            <Button\r\n                                color={addedToFav ? 'danger' : 'success'}\r\n                                onClick={this.handleClick}\r\n                                name={addedToFav ? 'remove' : 'add'}\r\n                            >\r\n                                {addedToFav ? 'Remove from favourites' : 'Add to favourites'}\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepositoryComponent;\r\n","import React, {Component} from 'react';\r\nimport RepositoryComponent from \"./RepositoryComponent\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\nimport {addFavouriteRepos, removeFavouriteRepos,enableMainContent, disableMainContent} from '../../redux/actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favouriteRepos: state.favouriteReposReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addFavouriteRepos,\r\n        removeFavouriteRepos,\r\n        enableMainContent,\r\n        disableMainContent\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RepositoryComponent);\r\n","import {ENABLE_MAIN_CONTENT,DISABLE_MAIN_CONTENT} from \"./main-content-view-types\";\r\n\r\nlet initialState = {data:'', display: false};\r\nconst mainContentViewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENABLE_MAIN_CONTENT: {\r\n            console.log('open in main view: ',action.payload);\r\n            return {...state, data:action.payload, display: true};\r\n        }\r\n        case DISABLE_MAIN_CONTENT: {\r\n            return {...state, data:'', display: false};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default mainContentViewReducer;\r\n","import React, {Component} from 'react';\r\n// import { Row } from 'reactstrap';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button, Row, Container, Col, CardHeader\r\n} from 'reactstrap';\r\nimport './ContributorsComponent.css';\r\nimport {disableMainContent} from \"../../redux/main-content-view/disable-main-content-view-action\";\r\n\r\nclass ContributorsComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const {dataOfARepo} = this.props;\r\n        console.log('data of a repo: ', dataOfARepo);\r\n        return(\r\n            <Container className='contributorsComponent'>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle className='contributorCardTitle'>{dataOfARepo.full_name.toUpperCase()}</CardTitle>\r\n                        <CardImg top className='avatarImage' width=\"100%\" src={dataOfARepo.owner.avatar_url} alt=\"Card image cap\" />\r\n                        <Row className='contributorCardRow'>\r\n                            <Col>\r\n                                <CardHeader>Repo Name</CardHeader>\r\n                                <CardText>{dataOfARepo.name}</CardText>\r\n                                <CardHeader>Default branch</CardHeader>\r\n                                <CardText>{dataOfARepo.default_branch}</CardText>\r\n                                <CardHeader>Created at</CardHeader>\r\n                                <CardText>{dataOfARepo.created_at}</CardText>\r\n                                <CardHeader>Clone url</CardHeader>\r\n                                <CardText>{dataOfARepo.clone_url}</CardText>\r\n                                <CardHeader>No of watchers</CardHeader>\r\n                                <CardText>{dataOfARepo.watchers}</CardText>\r\n                            </Col>\r\n                            <Col>\r\n                                <CardHeader>Description</CardHeader>\r\n                                <CardText>{dataOfARepo.description}</CardText>\r\n                                <CardHeader>No of forks</CardHeader>\r\n                                <CardText>{dataOfARepo.forks}</CardText>\r\n                                <CardHeader>Updated at</CardHeader>\r\n                                <CardText>{dataOfARepo.updated_at}</CardText>\r\n                                <CardHeader>SSH</CardHeader>\r\n                                <CardText>{dataOfARepo.ssh_url}</CardText>\r\n                                <CardHeader>License</CardHeader>\r\n                                <CardText>{dataOfARepo.license? dataOfARepo.license.name : 'Not Available'}</CardText>\r\n                            </Col>\r\n                        </Row>\r\n                        <Button color='success' onClick={this.props.disableMainContent}>Back</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContributorsComponent;\r\n","import React, {Component} from 'react';\r\nimport ContributorsComponent from \"./ContributorsComponent\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    disableMainContent\r\n} from '../../redux/actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dataOfARepo: state.mainContentViewReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        disableMainContent\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContributorsComponent);\r\n","import React, {Component} from 'react';\r\nimport RepositoryComponent from \"../Repository/RepositoryComponent\";\r\nimport axios from 'axios';\r\nimport { Container, Row } from 'reactstrap';\r\nimport './ListOfReposComponent.css';\r\nimport RepositoryContainer from \"../Repository/RepositoryContainer\";\r\nimport getDataFromGit from \"../../redux/fetch-data-from-git/fetch-data-from-git-action\";\r\nimport mainContentViewReducer from \"../../redux/main-content-view/main-content-view-reducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport ContributorsContainer from \"../contributors/ContributorsContainer\";\r\n\r\nclass ListOfReposComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            repositoryData: null,\r\n            dataToShow: null\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props,state) {\r\n        if (props.searchKeyEntered.searchKey && state.repositoryData) {\r\n            console.log('why: ', state.repositoryData)\r\n            state.dataToShow = state.repositoryData.filter(val => val.name.toLowerCase()\r\n                .includes(props.searchKeyEntered.searchKey.toLowerCase()))\r\n        }\r\n        return state;\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*axios.get('https://api.github.com/users/chaitanyaivc/repos')\r\n            .then(res=>this.setState({\r\n                repositoryData: res.data,\r\n                dataToShow: res.data\r\n            }));*/\r\n        this.props.getDataFromGit();\r\n    }\r\n\r\n    render() {\r\n        let { dataProcessedToDisplay, mainContentViewReducer } = this.props;\r\n        console.log('entered key is: ', dataProcessedToDisplay);\r\n        return(\r\n            <Container className='containerClass' fluid={true}>\r\n                {!mainContentViewReducer.display ?\r\n                    <Row>\r\n                        {\r\n                            dataProcessedToDisplay !== null ?\r\n                                dataProcessedToDisplay.map((val, ind) => <RepositoryContainer\r\n                                    repoData={val}\r\n                                    index={ind}\r\n                                />)\r\n                                :\r\n                                null\r\n                        }\r\n                    </Row>:\r\n                    <ContributorsContainer/>\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListOfReposComponent;\r\n","import React, {Component} from 'react';\r\nimport ListOfReposComponent from \"./ListOfReposComponent\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\nimport {getDataFromGit} from '../../redux/actions';\r\nimport mainContentViewReducer from \"../../redux/main-content-view/main-content-view-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('data watch: ', state.dataFromGit);\r\n    let dataFromGit = state.dataFromGit;\r\n    let enteredKey = state.searchReposByTitleReducer;\r\n    let favouriteRepos = state.favouriteReposReducer;\r\n    let allOrFavs = state.updateDropDownReducer;\r\n    let dataProcessedToDisplay = null;\r\n    if (allOrFavs === 'All') {\r\n        console.log('data entered is: ', enteredKey);\r\n        if (enteredKey.searchKey && dataFromGit) {\r\n            dataProcessedToDisplay = dataFromGit.filter(val => val.name.toLowerCase()\r\n                .includes(enteredKey.searchKey.toLowerCase()))\r\n        } else {\r\n            dataProcessedToDisplay = dataFromGit;\r\n        }\r\n    } else if (allOrFavs === 'Favourites') {\r\n        dataProcessedToDisplay = favouriteRepos;\r\n    }\r\n    return {\r\n        searchKeyEntered: state.searchReposByTitleReducer,\r\n        favouriteRepos: state.favouriteReposReducer,\r\n        updatedDropDown: state.updateDropDownReducer,\r\n        dataProcessedToDisplay,\r\n        mainContentViewReducer: state.mainContentViewReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getDataFromGit\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfReposComponent);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport HeaderComponent from \"./Components/Header/HeaderComponent\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport ListOfReposComponent from \"./Components/ListOfRepos/ListOfReposComponent\";\nimport ListOfReposContainer from \"./Components/ListOfRepos/ListOfReposContainer\";\nimport React from \"react\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderContainer/>\n      <ListOfReposContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {SEARCH_REPO_BY_TITLE} from './search-repos-by-title-types';\r\nimport {act} from \"@testing-library/react\";\r\n\r\nlet initialState = {};\r\nconst searchReposByTitleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_REPO_BY_TITLE: {\r\n            console.log(action.payload.searchKey);\r\n            return {...state, searchKey: action.payload.searchKey}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default searchReposByTitleReducer;\r\n","import {ADD_TO_FAVOURITE_REPOS, REMOVE_FROM_FAVOURITE_REPOS} from \"./favourite-repos-type\";\r\n\r\nconst initialState = [];\r\nconst favouriteReposReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVOURITE_REPOS: {\r\n            console.log('repos: ', action.payload.repoDetails);\r\n            let filterFavs = state.filter(val => val.name === action.payload.repoDetails.name);\r\n            if (filterFavs.length === 0) {\r\n                action.payload.repoDetails.addedToFav = true;\r\n                return [...state, action.payload.repoDetails]\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        case REMOVE_FROM_FAVOURITE_REPOS: {\r\n            let arrayData =  state.map(val => {\r\n                if (val.name === action.payload.repoDetails.name && val.addedToFav === true) {\r\n                    val.addedToFav = false;\r\n                    return val;\r\n                } else {\r\n                    return val\r\n                }\r\n            });\r\n            return arrayData.filter(val => val.name !== action.payload.repoDetails.name);\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default favouriteReposReducer;\r\n","import {UPDATE_DROP_DOWN} from \"./change-header-dropdown-types\";\r\nconst initialState = 'All';\r\nconst updateDropDownReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_DROP_DOWN: {\r\n            return action.payload.dropDownSelected\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateDropDownReducer;\r\n","import {GET_DATA_FROM_GIT, GET_DATA_FROM_GIT_ERROR} from \"./fetch-data-from-git-types\";\r\n\r\nconst initialData = [];\r\nconst dataFromGit = (state = initialData, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA_FROM_GIT: {\r\n            return action.payload\r\n        }\r\n        case GET_DATA_FROM_GIT_ERROR: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dataFromGit;\r\n","import {combineReducers} from \"redux\";\r\nimport searchReposByTitleReducer from \"./SearchReposByTitle/search-repos-by-title-reducer\";\r\nimport favouriteReposReducer from './favourite-repos/favourite-repos-reducer';\r\nimport updateDropDownReducer from './change-header-dropdown/change-header-dropdown-reducer';\r\nimport dataFromGit from './fetch-data-from-git/fetch-data-from-git-reducer';\r\nimport mainContentViewReducer from './main-content-view/main-content-view-reducer';\r\nexport default combineReducers({\r\n    searchReposByTitleReducer,\r\n    favouriteReposReducer,\r\n    updateDropDownReducer,\r\n    dataFromGit,\r\n    mainContentViewReducer\r\n})\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport rootReducer from './reducers';\r\nimport thunk from \"redux-thunk\";\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}